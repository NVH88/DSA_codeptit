#include<bits/stdc++.h>
using namespace std;

vector<int> ke[1005];
int used[1005], n, m;

void dfs(int u) {
	used[u] = 1;
	for(int i : ke[u]) {
		if(!used[i]) dfs(i);
	}
}

int main() {
	int t; cin >> t;
	while(t--) {
		for(int i = 1; i <= 1000; ++i) ke[i].clear();
		memset(used, 0, sizeof(used));
		cin >> n >> m;
		for(int i = 0; i < m; ++i) {
			int a, b; cin >> a >> b;
			ke[a].push_back(b); ke[b].push_back(a);
		}
		int ans, cnt = 0;
		for(int i = 1; i <= n; ++i) {
			if(ke[i].size() % 2) ++cnt;
		}
		if(cnt == 0) ans = 2;
		else if(cnt == 2) ans = 1;
		else ans = 0;
		if(ans != 0) {
			dfs(1);
			for(int i = 1; i <= n; ++i) {
				if(!used[i]) {
					ans = 0;
					break;
				}
			}
		}
		cout << ans << endl;
	}
}
