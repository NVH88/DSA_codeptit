#include<bits/stdc++.h>
using namespace std;

struct node {
	int data;
	node *l, *r;
	node(int x) {
		data = x;
		l = r = NULL;
	}
};

void insert(node *root, int a, int b, char c) {
	if(root == NULL) return;
	if(root->data == a) {
		if(c == 'L') root->l = new node(b);
		else root->r = new node(b);
		return;
	}
	insert(root->l, a, b, c);
	insert(root->r, a, b, c);
}

int ans;

int calc(node *root) {
	if(root == NULL) return 0;
	if(root->l == NULL && root->r == NULL) return root->data;
	int a = calc(root->l), b = calc(root->r);
	ans = max(ans, root->data + a + b);
	if(root->l == NULL) return root->data + b;
	if(root->r == NULL) return root->data + a;
	return root->data + max(a, b);
}

int main() {
	int t; cin >> t;
	while(t--) {
		ans = -1e9;
		int n; cin >> n;
		node *root = NULL;
		for(int i = 0; i < n; ++i) {
			int a, b; char c; cin >> a >> b >> c;
			if(root == NULL) root = new node(a);
			insert(root, a, b, c);
		}
		calc(root);
		cout << ans << endl;
	}
}
