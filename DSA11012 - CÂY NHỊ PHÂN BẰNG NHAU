#include<bits/stdc++.h>
using namespace std;

struct node {
	int data;
	node *l, *r;
	node(int x) {
		data = x;
		l = r = NULL;
	}
};

void insert(node *root, int u, int v, char c) {
	if(root == NULL) return;
	if(root->data == u) {
		if(c == 'L') root->l = new node(v);
		else root->r = new node(v);
		return;
	}
	insert(root->l, u, v, c);
	insert(root->r, u, v, c);
}

bool check(node *root1, node *root2) {
	if(root1 == NULL && root2 == NULL) return true;
	if((root1 == NULL && root2 != NULL) || (root1 != NULL && root2 == NULL)) return false;
	if(root1->data != root2->data) return false;
	if(!check(root1->l, root2->l) || !check(root1->r, root2->r)) return false;
	return true;
}

int main() {
	int t; cin >> t;
	while(t--) {
		int n; cin >> n;
		node *root1 = NULL, *root2 = NULL;
		for(int i = 0; i < n; ++i) {
			int a, b; char c; cin >> a >> b >> c;
			if(root1 == NULL) root1 = new node(a);
			insert(root1, a, b, c);
		}
		int m; cin >> m;
		for(int i = 0; i < m; ++i) {
			int a, b; char c; cin >> a >> b >> c;
			if(root2 == NULL) root2 = new node(a);
			insert(root2, a, b, c);
		}
		cout << check(root1, root2) << endl;
	}
}
