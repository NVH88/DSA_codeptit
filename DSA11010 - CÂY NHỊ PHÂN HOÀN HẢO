#include<bits/stdc++.h>
using namespace std;

struct node {
	int data;
	node *l, *r;
	node(int x) {
		data = x;
		l = r = NULL;
	}
};

void insert(node *root, int u, int v, char c) {
	if(root == NULL) return;
	if(root->data == u) {
		if(c == 'L') root->l = new node(v);
		else root->r = new node(v);
		return;
	}
	insert(root->l, u, v, c);
	insert(root->r, u, v, c);
}

bool check(node *root) {
	queue<node *> q1, q2;
	q1.push(root);
	int cnt = 0;
	while(q1.size() || q2.size()) {
		if(q1.size()) {
			if(q1.size() != pow(2, cnt)) return false;
			while(q1.size()) {
				node *tmp = q1.front(); q1.pop();
				if(tmp->l != NULL) q2.push(tmp->l);
				if(tmp->r != NULL) q2.push(tmp->r);
			}
		}
		else if(q2.size()) {
			if(q2.size() != pow(2, cnt)) return false;
			while(q2.size()) {
				node *tmp = q2.front(); q2.pop();
				if(tmp->l != NULL) q1.push(tmp->l);
				if(tmp->r != NULL) q1.push(tmp->r);
			}
		}
		++cnt;
	}
	return true;
}

int main() {
	int t; cin >> t;
	while(t--) {
		int n; cin >> n;
		node *root = NULL;
		for(int i = 0; i < n; ++i) {
			int a, b; char c; cin >> a >> b >> c;
			if(root == NULL) root = new node(a);
			insert(root, a, b, c);
		}
		if(check(root)) cout << "Yes" << endl;
		else cout << "No" << endl;
	}
}
