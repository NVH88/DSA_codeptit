#include<bits/stdc++.h>
using namespace std;
#define pi pair<int, int>

int n, k, m, used[105][105];
vector<pi> v;
set<pi> ke[105][105];
int dx[] = {+0, -1, +1, +0};
int dy[] = {-1, +0, +0, +1};

void dfs(int a, int b) {
	used[a][b] = 1;
	for(pi i : ke[a][b]) {
		if(!used[i.first][i.second]) dfs(i.first, i.second);
	}
}

int main() {
	cin >> n >> k >> m;
	for(int i = 1; i <= n; ++i) {
		for(int j = 1; j <= n; ++j) {
			for(int k = 0; k < 4; ++k) {
				int i1 = i + dy[k], j1 = j + dx[k];
				if(i1 >= 1 && i1 <= n && j1 >= 1 && j1 <= n) ke[i][j].insert({i1, j1});
			}
		}
	}
	for(int i = 0; i < m; ++i) {
		int a, b, c, d; cin >> a >> b >> c >> d;
		ke[a][b].erase({c, d});
		ke[c][d].erase({a, b});
	}
	for(int i = 0; i < k; ++i) {
		int a, b; cin >> a >> b;
		v.push_back({a, b});
	}
	vector<int> tplt;
	int tmp = 0;
	for(pi i : v) {
		if(!used[i.first][i.second]) {
			dfs(i.first, i.second);
			int cnt = 0;
			for(pi j : v) {
				if(used[j.first][j.second]) ++cnt;
			}
			tplt.push_back(cnt - tmp);
			tmp = cnt;
		}
	}
	int ans = 0;
	for(int i = 0; i < tplt.size(); ++i) {
		for(int j = i + 1; j < tplt.size(); ++j) {
			ans += tplt[i] * tplt[j];
		}
	}
	cout << ans;
}
