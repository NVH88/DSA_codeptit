// đây là bài giải chưa xử lí xong phần modulo 1e15 + 7

#include<bits/stdc++.h>
using namespace std;
#define ll long long
const ll M = 1e15 + 7;

struct matrix {
	ll a[5][5];
};

matrix T, F;

void ktao() {
	T.a[1][1] = 0; T.a[1][2] = 1; T.a[1][3] = 0;
	T.a[2][1] = 0; T.a[2][2] = 0; T.a[2][3] = 1;
	T.a[3][1] = 1; T.a[3][2] = 1; T.a[3][3] = 1;
	F.a[1][1] = 1;
	F.a[2][1] = 2;
	F.a[3][1] = 3;
}

matrix nhan(matrix x, matrix y) {
	matrix ans;
	for(int i = 1; i <= 3; i++) {
		for(int j = 1; j <= 3; j++) {
			ans.a[i][j] = 0;
			for(int k = 1; k <= 3; k++) {
				ans.a[i][j] = (ans.a[i][j] % M + ((x.a[i][k] % M) * (y.a[k][j] % M)) % M) % M;
			}
		}
	}
	return ans;
}

matrix lt(matrix x, ll n) {
	if(n == 1) return T;
	matrix tmp = lt(x, n / 2);
	tmp = nhan(tmp, tmp);
	if(n % 2) return nhan(tmp, T);
	return tmp;
} 

ll solve(matrix x, matrix y) {
	matrix ans;
	for(int i = 1; i <= 3; i++) {
		int j = 1;
		ans.a[i][j] = 0;
		for(int k = 1; k <= 3; k++) {
			ans.a[i][j] = (ans.a[i][j] % M + ((x.a[i][k] % M) * (y.a[k][j] % M)) % M) % M;
		}
	}
	ll res = ((ans.a[1][1] + ans.a[3][1]) % M) / 2 - 1;
	return res;
}

int main() {
	ktao();
	int t; cin >> t;
	while(t--) {
		ll n; cin >> n;
		if(n < 1) cout << 0 << endl;
		else if(n == 1) cout << 1 << endl;
		else if(n == 2) cout << 3 << endl;
		else if(n == 3) cout << 6 << endl;
		else {
			matrix tmp = lt(T, n - 1);
			cout << solve(tmp, F) << endl;	
		}
	}
}
